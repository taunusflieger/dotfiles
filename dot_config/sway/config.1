# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * {
    bg "#1a1c1c" solid_color
}

#font pango:JetBrains Mono Regular Nerd Font Complete 10
font pango: Taskbar, Cantarell 12

# Gaps
gaps inner 5
smart_gaps on

# Borders
default_border pixel 2
default_floating_border none
hide_edge_borders --i3 none

# Disable cursor jumping
mouse_warping none
focus_follows_mouse no
focus_wrapping no
tiling_drag disable

# Workspaces
#workspace_layout tabbed
set $workspace1 workspace number 1
set $workspace2 workspace number 2
set $workspace3 workspace number 3
set $workspace4 workspace number 4
set $workspace5 workspace number 5
set $workspace6 workspace number 6
set $workspace7 workspace number 7
set $workspace8 workspace number 8
set $workspace9 workspace number 9
set $workspace0 workspace number 10

#Workspace  (off-screen)
#  Output: DP-1
#  Layout: splith
#  Representation: H[TelegramDesktop]

#Workspace  (off-screen)
#  Output: DP-1
#  Layout: splith
#  Representation: H[Thunderbird]

#Workspace  (focused)
#  Output: DP-1
#  Layout: splith
#  Representation: H[termite Nightly termite]

#Workspace  (off-screen)
#  Output: DP-1
#  Layout: splith
#  Representation: H[termite]


# Specific window configuration
for_window    [app_id=".*"]                              sticky enable
for_window    [window_role="pop-up"]                     floating enable
for_window    [app_id="udiskie"]                         floating enable
for_window    [app_id="org.qutebrowser.qutebrowser"]     move container to $workspace2
for_window    [app_id="Signal"]                          move container to $workspace3
for_window    [app_id="neomutt"]                         move container to $workspace4, title_format "NeoMutt"
for_window    [app_id="dmenu.*"]                         floating enable, resize set width 60ppt height 80ppt
for_window    [app_id="dmenu-browser"]                   resize set height 20ppt
for_window    [app_id="dmenu-emoji"]                     resize set height 20ppt
for_window    [app_id="qalculate-gtk"]                   floating enable
for_window    [app_id="mpv"]                             floating enable, resize set width 531 height 300, move position 1345 125
for_window    [app_id="iriunwebcam"]                     floating disable

# Color scheme (Gruvbox dark)
set $color_normal_white  #a89984
set $color_bright_white  #ebdbb2
set $color_normal_gray   #282828
set $color_bright_gray   #3c3836
set $color_bright_yellow #d79921
set $color_normal_black  #1d2021
set $color_unused        #ff0000

# Colors                  border                 background             text                   indicator            child_border
client.focused            $color_bright_gray     $color_bright_gray     $color_bright_white    $color_bright_gray   $color_normal_black
client.focused_inactive   $color_bright_gray     $color_bright_gray     $color_bright_white    $color_bright_gray   $color_normal_black
client.unfocused          $color_normal_gray     $color_normal_gray     $color_normal_white    $color_normal_gray   $color_normal_black
client.urgent             $color_bright_yellow   $color_bright_yellow   $color_normal_black    $color_unused        $color_unused
client.placeholder        $color_unused          $color_unused          $color_unused          $color_unused        $color_unused

#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input * {
  xkb_layout "de"
}

### Key bindings
#
# Basics:
#



# Use Mouse+$hyper to drag floating windows to their wanted position
floating_modifier $mod

set $mode_audio "Audio"
mode $mode_audio {
    bindsym --to-code {
        h exec sway-audio bt-connect-headphones, mode "default"
        s exec sway-audio bt-connect-speakers, mode "default"
        t exec sway-audio bt-toggle-profile, mode "default"
        d exec sway-audio bt-disconnect, mode "default"

        # back to normal: Enter or Escape
        Return mode default
        Escape mode default
    }
}

set $mode_resize "Resize window"
mode $mode_resize {
    bindsym --to-code {
        h            exec swaymsg resize grow   left 10 || swaymsg resize shrink right 10
        Ctrl+h       exec swaymsg resize grow   left 1  || swaymsg resize shrink right 1
        j            exec swaymsg resize shrink up   10 || swaymsg resize grow   down  10
        Ctrl+j       exec swaymsg resize shrink up   1  || swaymsg resize grow   down  1
        k            exec swaymsg resize grow   up   10 || swaymsg resize shrink down  10
        Ctrl+k       exec swaymsg resize grow   up   1  || swaymsg resize shrink down  1
        l            exec swaymsg resize shrink left 10 || swaymsg resize grow   right 10
        Ctrl+l       exec swaymsg resize shrink left 1  || swaymsg resize grow   right 1

        # back to normal: Enter or Escape
        Return mode default
        Escape mode default
    }
}

set $mode_system "System exit"
mode $mode_system {
    bindsym --to-code {
        e exec sway-exit exit, mode "default"
        l exec sway-exit lock, mode "default"
        s exec sway-exit suspend, mode "default"
        r exec sway-exit reboot, mode "default"
        h exec sway-exit shutdown, mode "default"

        # back to normal: Enter or Escape
        Return mode default
        Escape mode default
    }
}

set $mode_workspaces_monitors "Move workspace between monitors"
mode $mode_workspaces_monitors {
    bindsym --to-code {
        h exec swaymsg move workspace to output left, mode "default"
        l exec swaymsg move workspace to output right, mode "default"

        # back to normal: Enter or Escape
        Return mode default
        Escape mode default
    }
}


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will row the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
bar { 
     swaybar_command waybar
}
include /etc/sway/config.d/*

#workspace 1
#exec kitty
#workspace 2
#exec kitty
#workspace 3
#exec /opt/vivaldi/vivaldi
exec_always \
    swaymsg "workspace 1"; \
    swaymsg "exec kitty"; \
    swaymsg "layout splith"; \
    sleep 0.3s; \
    swaymsg "workspace 2"; \
    swaymsg "exec kitty"; \
    swaymsg "layout splitv"; \
    sleep 0.3s; \
    swaymsg "workspace 3"; \
    swaymsg "exec /opt/vivaldi/vivaldi"; \
    swaymsg "layout tabbed"; \
    sleep 0.3s; \
    swaymsg "exec kitty"; \
    sleep 0.3s; 
